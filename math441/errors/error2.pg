# DESCRIPTION
# Calculate absolute and relative error
# written by Jan Hlavacek (jhlavace@svsu.edu)
# ENDDESCRIPTION

## DBsubject('Numerical Analysis')
## DBchapter('Errors')
## DBsection('Absolute and relative errors')
## KEYWORDS('error, approximation')
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Jan Hlavacek')
## Institution('SVSU')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"PGcourse.pl",
);
Context("Numeric");
Context()->{format}{number} = "%.8f#";
Context()->flags->set(
     tolType      => 'absolute',
     tolerance    => 1e-6,       # the relative or absolute tolerance
);

# Define variables here:

$aint = random(10,99,1);
$af = random(1,9,1);

$b = random(10,99,1)*10;

$c = random(1,9,1);

$approxf = $af;
$exactf = $af*1000 + $b + $c;
$exact = $aint*10000 + $exactf;
$error = $b + $c;

$abserror = $error*1e-4;
$relerror = $error/$exact;

$absans = Compute("$abserror");
$relans = Compute("$relerror");

# Actual problem goes here:
TEXT(beginproblem());
BEGIN_PGML
The number [`x = [$aint].[$exactf]`] is approximated by [`x^* = [$aint].[$approxf]`].  Calculate the absolute and relative errors.  Enter the answers with at least 6 decimal places.

*  Absolute error: [_______________]{$absans}
*  Relative error: [_______________]{$relans}

END_PGML

ENDDOCUMENT();
