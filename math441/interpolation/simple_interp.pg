# DESCRIPTION
# Interpolate given points with a polynomial
# written by Jan Hlavacek (jhlavace@svsu.edu)
# ENDDESCRIPTION

## DBsubject('Numerical Analysis')
## DBchapter('Interpolation')
## DBsection('Polynomial Interpolation')
## KEYWORDS('interpolation, polynomial')
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Jan Hlavacek')
## Institution('SVSU')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"PGcourse.pl",
);
Context("Numeric");

# Define variables here:

$x0 = random(-3,3,1);
do {$x1 = random(-3,3,1);} while ($x1 == $x0);
do {$x2 = random(-3,3,1);} while ($x2 == $x0 || $x2 == $x1);
if ($x0*$x1*$x2 != 0) {
    $x3 = 0;
} else {
    do {$x3 = random(-3,3,1);} while ($x3 == $x1 || $x3 == $x2 || $x3 == $x0);
}

$a0 = $list_random(-1,1)*random(1,5,1);
$a1 = $list_random(-1,1)*random(1,5,1);
$a2 = $list_random(-1,1)*random(1,5,1);
$a3 = $list_random(-1,1)*random(1,5,1);

$poly = Compute("$a3*x^3 + ($x2)*x^2 + ($x1)*x + $x0")->reduce;
$poly= $poly->{limits} = [-3,3];
$poly= $poly->{test_at} = [[$x0], [$x1], [$x2], [$x3]];

$y0 = $poly->eval(x=>$x0);
$y1 = $poly->eval(x=>$x1);
$y2 = $poly->eval(x=>$x2);
$y3 = $poly->eval(x=>$x3);

@xs = [$x0, $x1, $x2, $x3]
@ys = [$y0, $y1, $y2, $y3]

# Actual problem goes here:
TEXT(beginproblem());
BEGIN_PGML
Given the following data:

[@ DataTable( [[["\\(i\\)", midrule=>1], [0, 1, 2, 3]], 
               ["\\(x_i\\)", @xs], 
               ["\\(y_i\\)", @ys ]],
             align => 'r|c|c|c|c') @]***

find a polynomial $P$ of degree at most 3 such that $P(x_i) = y_i$ for $i = 0, 1, 2, 3$.

[`P(x) = `] [_________________________]{$poly}

END_PGML

ENDDOCUMENT();
