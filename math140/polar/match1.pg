##DESCRIPTION
##  Polar Coordinates
##ENDDESCRIPTION


## DBsubject(Trigonometry)
## DBchapter(Polar coordinates & vectors)
## DBsection(Curves)
## Date(2020-12-13)
## Institution(SVSU)
## Author(Jan Hlavacek)
## Level(2)
## KEYWORDS('Polar Coordinates')


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "MathObjects.pl",
  "imageChoice.pl",
  "PGgraphmacros.pl",
  "PGgraders.pl",
  "PGcourse.pl"
);

$refreshCachedImages=1;

############################################
#  Setup

$size = [250,250];   # the size of the images
$tsize = 450;        # tex size of the images


Context("Numeric")->variables->are(x=>'Real',y=>'Real',r=>'Real',theta=>['Real', TeX=>'\theta']);

## Curve 0: circle
$rad0 = random(2,4,.1);
$r[0] = Formula("$rad0");
$domainS[0] = -pi;
$domainE[0] = pi;
$steps[0] = 80;

## Curve 1: spiral
$r[1] = Formula("sqrt(theta)");
$domainS[1] = 0;
$domainE[1] = 2*pi;
$steps[1] = 80;

## Curve 2: line
$x2 = random(1,4);
$lim2 = atan(5/$x2);
$r[2] = Formula("$x2/cos(theta)")->reduce;
$domainS[2] = -$lim2;
$domainE[2] = $lim2;
$steps[2] = 10;

## Curve 3: cosine limacon
$b3 = list_random(-1,1)*random(1,3);
$r[3] = Formula("2 + $b3*cos(theta)")->reduce;
$domainS[3] = -pi;
$domainE[3] = pi;
$steps[3] = 80;

## Curve 4: sin limacon
$b4 = list_random(-1,1)*random(1,3);
$r[4] = Formula("2 + $b4*sin(theta)")->reduce;
$domainS[4] = -pi;
$domainE[4] = pi;
$steps[4] = 80;

## Curve 5: rose
$coef5 = 2*random(1,3);
$size5 = random(2,4);
$fun5 = list_random("sin","cos");
$r[5] = Formula("$size5$fun5($coef5*theta)")->reduce;
$domainS[5] = -pi;
$domainE[5] = pi;
$steps[5] = 200;

$ct = Formula("cos(theta)");
$st = Formula("sin(theta)");

foreach my $i (0..5) {
  $gr[$i] = init_graph(-5.1,-5.1,5.1,5.1,axes=>[0,0],pixels=>[400,400]);
  $gr[$i]->lb('reset');
  $gr[$i]->lb( new Label(4.7,0.2,'x','black','center','middle','large'));
  $gr[$i]->lb( new Label(0.2,4.7,'y','black','center','middle','large'));
  $xfunc[$i] = (($r[$i])*$ct)->perlFunction;
  $yfunc[$i] = (($r[$i])*$st)->perlFunction;
  $fn[$i] = new Fun($xfunc[$i], $yfunc[$i], $gr[$i]);
  $fn[$i]->domain($domainS[$i], $domainE[$i]);
  $fn[$i]->steps($steps[$i]);
}

#  Array of graphs

Context()->texStrings;

sub paramstr {
    $r = $_[0];

    return "\(\displaystyle r = $r\)";
}

@QA = (
paramstr($r[0]), $gr[0], 
paramstr($r[1]), $gr[1], 
paramstr($r[2]), $gr[2], 
paramstr($r[3]), $gr[3], 
paramstr($r[4]), $gr[4], 
paramstr($r[5]), $gr[5], 
);

$ml = new_image_match_list(
  link => 1,                #  link to separate image
  size => $size,            #  image size in pixels
  tex_size => $tsize,       #  tex size in precent times 10
  columns => 2,             #  number of columns
);

$ml->{separation} = 5;      # separation for questions in the list

$ml->rf_print_q(~~&pop_up_list_print_q); # use pop-up-lists
$ml -> ra_pop_up_list([ No_answer=>"?", A=>"A", B=>"B", C=>"C", D=>"D", E=>"E", F=>"F" ] );

$ml->qa(@QA);
$ml->choose(6);

###############################################
#  Main text

TEXT(beginproblem());

BEGIN_TEXT
\{
ColumnTable(
"Match each polar equation with one of the graphs labeled A - F".
$BR.
$BR.
$ml->print_q,
$BCENTER.
$ml->print_a.
$BR.
"(Click on a graph to enlarge it.)".
$ECENTER,
indent=>"0", separation=>"30", valign=>"TOP"
);
\}
END_TEXT

###############################################
# Answer evaluation

install_problem_grader(~~&custom_problem_grader_fluid);
$ENV{'grader_numright'} = [2,4];
$ENV{'grader_scores'} = [0.5,1];
$ENV{'grader_message'} = "You can earn " .
"50% partial credit for 2 - 3 correct answers.";

$showPartialCorrectAnswers = 0;

ANS(str_cmp($ml->ra_correct_ans));

ENDDOCUMENT();
