## DESCRIPTION
## Algebra: Simplify rational expression
# written by Jan Hlavacek (jhlavace@svsu.edu)
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Rational expression)
## DBsection(Simplifying rational expressions)
## Level(2)
## KEYWORDS('algebra', 'rational expressions')


###########################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"unionTables.pl",
"parserMultiAnswer.pl",
"contextInequalities.pl",
"PGML.pl",
"AnswerFormatHelp.pl",
);

TEXT(beginproblem());


###########################
#  Setup

Context("Numeric")->variables->are(y=>"Real");
Context()->{error}{msg}{"Operands of '*' can't be words"} = " ";

$a = random(1,9);
do {$b = random(1,9);} while ($b == $a);
$c = random(1,9);
$asq = $a*$a;
$a2b = $asq*$b;
$ambc = $c*($a - $b);
$abc = $a*$b*$c;


$numorig = Formula("y^4 - $b*y^3 - $asq*y + $a2b")->reduce;
$denorig = Formula("$c*y^3 + $ambc*y^2 - $abc*y")->reduce;

$num = Formula("y - $a")->reduce;
$den = Formula("$c");

$common1 = Formula("y")->reduce;
$common2 = Formula("y - $b")->reduce;
$common3 = Formula("y + $a")->reduce;

$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};

      if ( ( $f1==$f1stu &&  $f2==$f2stu) || 
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $self->setMessage(1,"Simplify your answer further");
          $self->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);


Context(Inequalities)->variables->are(y=>"Real");

$restrictions = List("y != 0, y != $b, y != -$a");

# 
#  Display the fraction and answer blanks nicely
#
$blankwidth = 15;
Context()->texStrings;
$fraction = "\frac{$numorig}{$denorig}";
if ($displayMode eq 'TeX') {
  $showfraction =
  "\( \displaystyle $fraction = \frac{".$multians->ans_rule(2*$blankwidth)."}{".$multians->ans_rule(2*$blankwidth)."}\}, ".ans_rule(2*$blankwidth);
} else {
  $showfraction =
  ColumnTable("\( \displaystyle $fraction = \)",
              ColumnTable(
              BeginTable(border=>0, spacing=>0, padding=>0).
              AlignedRow([ans_rule($blankwidth)], align=>CENTER, separation=>0).
              AlignedRow([$HR], align=>CENTER, separation=>0).
              AlignedRow([ans_rule($blankwidth)], align=>CENTER, separation=>0).
              EndTable(), ", ".ans_rule($blankwidth),
              indent=>0, separation=>0, valign=>"CENTER"),
              indent=>0, separation=>0, valign=>"CENTER")
}
Context()->normalStrings;

###########################
#  Main text

BEGIN_PGML
Simplify as much as possible.  When entering domain restrictions, use [|!=|] for [`\neq`] and separate inequalities with commas. If there are no domain restrictions, enter NONE.

[$showfraction]***

END_PGML


############################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

install_problem_grader(~~&std_problem_grader);

sub fix_plural_filter {
  my $ans = shift; 
  if ($ans->{ans_message} =~ /(.*) inequalitys(.*)/) {
      $ans->{ans_message} = "$1 inequalities$2";
  }
  return $ans; 
}

ANS( $multians->cmp() );
ANS( $restrictions->cmp()->withPostFilter(~~&fix_plural_filter));

############################
#  Solution

BEGIN_PGML_SOLUTION
The numerator can be factored as [`y(y - [$b])(y - [$a])(y + [$a])`], and the denominator can be factored as [`$c(y - [$b])(y + [$a])`].
The numerator and denominator have three common factors: [`[$common1]`], [`[$common2]`], and [`[$common3]`]. After cancelling, we get
[```\frac{[$num]}{[$den]}.```]

After the cancellation, none of three cancelled factors [`[$common1]`], [`[$common2]`], and [`[$common3]`] is in the denominator, so we need to add three domain restrictions to our answer: [`[$restrictions]`].
END_PGML_SOLUTION

ENDDOCUMENT();
