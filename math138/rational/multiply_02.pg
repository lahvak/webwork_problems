## DESCRIPTION
## Algebra: Simplify rational expression
# written by Jan Hlavacek (jhlavace@svsu.edu)
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Rational expression)
## DBsection(Simplifying rational expressions)
## Level(2)
## KEYWORDS('algebra', 'rational expressions')


###########################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"unionTables.pl",
"parserMultiAnswer.pl",
"contextInequalities.pl",
"PGML.pl",
"AnswerFormatHelp.pl",
);

TEXT(beginproblem());


###########################
#  Setup

Context("Numeric")->variables->are(x=>"Real");
Context()->{error}{msg}{"Operands of '*' can't be words"} = " ";

$f1a = random(1,7);
$f1b = list_random(-1,1)*random(2,9);
do {$f1c = random(1,7);} until ($f1c != $f1a && $f1c != $f1b);
do {$f1d = list_random(-1,1)*random(1,7);} until ($f1d != $f1a && $f1d != $f1b);
$f2a = $f1d;
do {$f2b = list_random(-1,1)*random(1,7);} until ($f2b != $f1c && $f2b != $f1d);
do {$f2c = list_random(-1,1)*random(1,7);} until ($f2c != $f1a && $f2c != $f1b && $f2c != $f2a && $f2c != $f2b);
$f2d = $f1a;

sub poly {
    my ($var, $a1, $b1, $a2, $b2, $com, $n) = @_;
    my $pow2 = 2 + $n;
    my $pow1 = 1 + $n;
    my $pow0 = $n;
    my $a = $a1*$a2*$com;
    my $b = $com*($a1*$b2 + $b1*$a2);
    my $c = $com*$b1*$b2;

    return "$a*$var^($pow2) + $b*$var^($pow1) + $c*$var^($pow0)";
}

sub factored {
    my ($var, $a1, $b1, $a2, $b2, $com, $n) = @_;

    return "$com*$var^($n)*($a1*$var + $b1)*($a2*$var + $b2)";
}

@n1 = ("x", 1, $f1a, 1, $f1b, 1, 0);
@d1 = ("x", 1, $f1c, 1, $f1d, 1, 0);

@n2 = ("x", 1, $f2a, 1, $f2b, 1, 0);
@d2 = ("x", 1, $f2c, 1, $f2d, 1, 0);

@n = ("x", 1, $f1b, 1, $f2b, 1, 0);
@d = ("x", 1, $f2c, 1, $f2d, 1, 0);


$num1 = Formula(poly @n1)->reduce;
$den1 = Formula(poly @d1)->reduce;

$num2 = Formula(poly @n2)->reduce;
$den2 = Formula(poly @d2)->reduce;

$num = Formula(poly @n)->reduce;
$den = Formula(poly @d)->reduce;

$factored_num1 = Formula(factored @n1)->reduce;
$factored_den1 = Formula(factored @d1)->reduce;
#
$factored_num2 = Formula(factored @n2)->reduce;
$factored_den2 = Formula(factored @d2)->reduce;

$factored_num = Formula(factored @n)->reduce;
$factored_den = Formula(factored @d)->reduce;

$common1 = Formula("x + $f1a")->reduce;
$common2 = Formula("x + $f2a")->reduce;

$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
 
      if ( ( $f1==$f1stu &&  $f2==$f2stu) || 
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $self->setMessage(1,"Simplify your answer further");
          $self->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);


Context(Inequalities);

$restrictions = List("x != -$f1a, x != -$f2a");

# 
#  Display the fraction and answer blanks nicely
#
$blankwidth = 15;
Context()->texStrings;
$fraction1 = "\frac{$num1}{$den1}";
$fraction2 = "\frac{$num2}{$den2}";
if ($displayMode eq 'TeX') {
  $showfraction =
  "\( \displaystyle $fraction1\cdot$fraction2 = \frac{".$multians->ans_rule(2*$blankwidth)."}{".$multians->ans_rule(2*$blankwidth)."}\}, ".ans_rule(2*$blankwidth);
} else {
  $showfraction =
  ColumnTable("\( \displaystyle $fraction1\cdot$fraction2 = \)",
              ColumnTable(
              BeginTable(border=>0, spacing=>0, padding=>0).
              AlignedRow([ans_rule($blankwidth)], align=>CENTER, separation=>0).
              AlignedRow([$HR], align=>CENTER, separation=>0).
              AlignedRow([ans_rule($blankwidth)], align=>CENTER, separation=>0).
              EndTable(), ", ".ans_rule($blankwidth),
              indent=>0, separation=>0, valign=>"CENTER"),
              indent=>0, separation=>0, valign=>"CENTER")
}
Context()->normalStrings;

###########################
#  Main text

BEGIN_PGML
Simplify as much as possible.  When entering domain restrictions, use [|!=|] for [`\neq`] and separate inequalities with commas. If there are no domain restrictions, enter NONE.

[$showfraction]***

END_PGML


############################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

install_problem_grader(~~&std_problem_grader);

sub fix_plural_filter {
  my $ans = shift; 
  if ($ans->{ans_message} =~ /(.*) inequalitys(.*)/) {
      $ans->{ans_message} = "$1 inequalities$2";
  }
  return $ans; 
}

ANS( $multians->cmp() );
ANS( $restrictions->cmp()->withPostFilter(~~&fix_plural_filter));

############################
#  Solution

BEGIN_PGML_SOLUTION
First we factor all the polynomials and write the product as a single fraction:
[```[$fraction1]\cdot[$fraction2]  = \frac{[$factored_num1]\cdot[$factored_num2]}{[$factored_den1]\cdot[$factored_den2]}```]
The numerator and denominator have two common factors: [`[$common1]`] and [`[$common2]`]. After cancelling, we get
[```\frac{[$factored_num]}{[$factored_den]} = \frac{[$num]}{[$den]}.```]

After the cancellation, the two cancelled factors are no longer in the denominator, so we need to add a domain restrictions to our answer: [`[$restrictions]`].
END_PGML_SOLUTION

ENDDOCUMENT();
